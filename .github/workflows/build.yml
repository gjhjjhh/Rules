name: Rules Maker

on:
  push:
    branches: [build]
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 确保有提交权限
    env:
      TZ: Asia/Shanghai

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          ref: build  # 明确拉取build分支（生成后推回该分支）

      - name: 配置Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 运行main.py生成domain目录
        run: |
          echo "生成原始域名文件..."
          python main.py
          echo "domain目录生成完成"

      - name: 运行convert_formats.py生成output目录
        run: |
          echo "转换格式生成output目录..."
          python convert_formats.py
          echo "output目录结构："
          tree output

      - name: 编译Singbox/Mihomo规则
        run: |
          # 编译Singbox
          find ./output -name "singbox.json" | while read json_file; do
            (cd $(dirname $json_file) && \
              wget -q https://github.com/SagerNet/sing-box/releases/download/v1.11.4/sing-box-1.11.4-linux-amd64.tar.gz -O sing-box.tar.gz && \
              tar -xzf sing-box.tar.gz && \
              ./*/sing-box rule-set compile singbox.json && \
              rm -rf sing-box.tar.gz */)
          done

          # 编译Mihomo
          find ./output -name "mihomo.yaml" | while read yaml_file; do
            (cd $(dirname $yaml_file) && \
              wget -q https://github.com/MetaCubeX/mihomo/releases/download/v1.19.3/mihomo-linux-amd64-v1.19.3.gz -O mihomo.gz && \
              gzip -d mihomo.gz && \
              chmod +x mihomo && \
              ./mihomo convert-ruleset domain yaml mihomo.yaml mihomo.mrs && \
              rm -rf mihomo)
          done

      - name: 提交output目录到仓库
        run: |
          # 配置git身份
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 拉取最新代码（避免冲突）
          git pull origin build
          
          # 添加生成的output目录
          git add output/
          
          # 提交变更
          if git status --porcelain | grep -q .; then
            git commit -m "Auto update rules: $(date +'%Y-%m-%d %H:%M:%S')"
            git push origin build  # 推送到当前分支（build）
            echo "✅ 成功提交output目录到build分支"
          else
            echo "ℹ️ 无新变更，无需提交"
          fi

      - name: 完成
        run: echo "🎉 所有规则已生成并提交到仓库"
