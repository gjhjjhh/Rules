name: Build Rules

on:
  schedule:
    - cron: "0 1 * * *"  # 保持定时触发
  workflow_dispatch:  # 保持手动触发

env:
  TZ: Asia/Shanghai  # 保持时区设置
  SINGBOX_VERSION: v1.11.4
  MIHOMO_VERSION: v1.19.3

jobs:
  Build_Rules:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 保留写入权限
      actions: write   # 保留清理工作流权限

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录，优化提交速度

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y parallel jq tree

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate domain directory
        run: python main.py

      - name: Generate output directory
        run: python convert_formats.py

      - name: Download and setup tools
        run: |
          # 下载并设置sing-box
          wget -q https://github.com/SagerNet/sing-box/releases/download/${{ env.SINGBOX_VERSION }}/sing-box-${{ env.SINGBOX_VERSION }}-linux-amd64.tar.gz -O sing-box.tar.gz
          tar -xzf sing-box.tar.gz
          mv sing-box-* sing-box
          chmod +x sing-box/sing-box

          # 下载并设置mihomo
          wget -q https://github.com/MetaCubeX/mihomo/releases/download/${{ env.MIHOMO_VERSION }}/mihomo-linux-amd64-${{ env.MIHOMO_VERSION }}.gz -O mihomo.gz
          gzip -d mihomo.gz
          chmod +x mihomo

      - name: Compile Singbox rules (parallel)
        run: |
          # 使用parallel并行处理
          find ./output -name "singbox.json" -print0 | \
            parallel -0 -j 6 'dir={//}; \
            echo "Compiling $dir/singbox.json"; \
            ./sing-box/sing-box rule-set compile --output "$dir/singbox.srs" "$dir/singbox.json"'

      - name: Compile Mihomo rules (parallel)
        run: |
          # 使用parallel并行处理
          find ./output -name "mihomo.yaml" -print0 | \
            parallel -0 -j 6 'dir={//}; \
            echo "Compiling $dir/mihomo.yaml"; \
            ./mihomo convert-ruleset domain yaml "$dir/mihomo.yaml" "$dir/mihomo.mrs"'

      - name: Cleanup tools
        run: |
          rm -rf sing-box* mihomo*

      - name: List output structure
        run: tree output

      - name: Optimized commit and push
        run: |
          # 配置Git身份
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 仅添加变化的目录
          git add output/ domain/
          
          # 检查是否有变更
          if [ -n "$(git status --porcelain)" ]; then
            # 创建优化提交
            git commit -m "🚀 CI: Update rules $(date +'%Y-%m-%d %H:%M')" \
              -m "Auto-generated by GitHub Actions"
            
            # 使用推送优化
            git pull --rebase
            git push origin main
          else
            echo "No changes detected, skipping commit"
          fi

      - name: Delete old workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 7
          keep_minimum_runs: 3
